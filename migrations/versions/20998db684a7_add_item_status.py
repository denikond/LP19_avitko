"""add item status

Revision ID: 20998db684a7
Revises: 951862b9d594
Create Date: 2021-01-26 00:37:38.674247

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import String, Column
from sqlalchemy.sql import text, table, column
from app.models import Item_status
from app import db

from alembic import context

# revision identifiers, used by Alembic.
revision = '20998db684a7'
down_revision = '951862b9d594'
branch_labels = None
depends_on = None

def upgrade():
    schema_upgrades()
    data_upgrades()


def schema_upgrades():
    # ### commands auto generated by Alembic - please adjust! ###
    op.rename_table('image', 'image_temp')
    op.rename_table('item', 'item_temp')
    op.rename_table('user', 'user_temp')


    op.create_table('item_status',
    sa.Column('key', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('creation_date', sa.DateTime(), nullable=True),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )

    op.drop_index('ix_user_email', table_name='user_temp')
    op.drop_index('ix_user_username', table_name='user_temp')

    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('item',
    sa.Column('key', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('num_of_ad', sa.String(length=32), nullable=True),
    sa.Column('creation_date', sa.DateTime(), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('extended_text', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['status'], ['item_status.key'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('key')
    )
    op.drop_index('ix_item_description', table_name='item_temp')
    op.drop_index('ix_item_num_of_ad', table_name='item_temp')    
    op.create_index(op.f('ix_item_description'), 'item', ['description'], unique=False)
    op.create_index(op.f('ix_item_num_of_ad'), 'item', ['num_of_ad'], unique=True)
    op.create_table('image',
    sa.Column('key', sa.Integer(), nullable=False),
    sa.Column('num_of_ad', sa.String(length=32), nullable=True),
    sa.Column('image_path', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['num_of_ad'], ['item.num_of_ad'], ),
    sa.PrimaryKeyConstraint('key')
    )
    # ### end Alembic commands ###

def data_upgrades():


    is_ = Item_status(description='active')
    db.session.add(is_)
    is_ = Item_status(description='on_edit')
    db.session.add(is_)
    is_ = Item_status(description='deleted')
    db.session.add(is_)
    db.session.commit()
    
    conn = op.get_bind()
    conn.execute(
        text(
            """
            INSERT INTO user (creation_date, username, email, password_hash)
            SELECT creation_date, username, email, password_hash
            FROM user_temp
            """
        )
    )

    conn.execute(
        text(
            """
            INSERT INTO item (description, num_of_ad, creation_date, address, price, extended_text, user_id)
            SELECT description, num_of_ad, creation_date, address, price, extended_text, user_id
            FROM item_temp
            """
        )
    )

    conn.execute(
        text(
            """
            UPDATE item SET status = 1
            """
        )
    )

    conn.execute(
        text(
            """
            INSERT INTO image (num_of_ad, image_path)
            SELECT num_of_ad, image_path
            FROM image_temp
            """
        )
    )

    op.drop_table('image_temp')
    op.drop_table('item_temp')
    op.drop_table('user_temp')




def downgrade():
    schema_downgrades()
    data_downgrades()    


def schema_downgrades():
    op.rename_table('image', 'image_temp')
    op.rename_table('item', 'item_temp')
    op.rename_table('user', 'user_temp')
    

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('creation_date', sa.DateTime(), nullable=True),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_index('ix_user_email', table_name='user_temp')
    op.drop_index('ix_user_username', table_name='user_temp')
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('item',
    sa.Column('key', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('num_of_ad', sa.String(length=32), nullable=True),
    sa.Column('creation_date', sa.DateTime(), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('extended_text', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('key')
    )

    op.drop_index('ix_item_description', table_name='item_temp')
    op.drop_index('ix_item_num_of_ad', table_name='item_temp')
    op.create_index(op.f('ix_item_description'), 'item', ['description'], unique=False)
    op.create_index(op.f('ix_item_num_of_ad'), 'item', ['num_of_ad'], unique=True)

    op.create_table('image',
    sa.Column('key', sa.Integer(), nullable=False),
    sa.Column('num_of_ad', sa.String(length=32), nullable=True),
    sa.Column('image_path', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['num_of_ad'], ['item.num_of_ad'], ),
    sa.PrimaryKeyConstraint('key')
    )

def data_downgrades():

    conn = op.get_bind()

    conn.execute(
        text(
            """
            INSERT INTO user (creation_date, username, email, password_hash)
            SELECT creation_date, username, email, password_hash
            FROM user_temp
            """
        )
    )

    conn.execute(
        text(
            """
            INSERT INTO item (description, num_of_ad, creation_date, address, price, extended_text, user_id)
            SELECT description, num_of_ad, creation_date, address, price, extended_text, user_id
            FROM item_temp
            """
        )
    )

    conn.execute(
        text(
            """
            INSERT INTO image (num_of_ad, image_path)
            SELECT num_of_ad, image_path
            FROM image_temp
            """
        )
    )

    op.drop_table('image_temp')
    op.drop_table('item_temp')
    op.drop_table('user_temp')
    op.drop_table('item_status')
